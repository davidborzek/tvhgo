{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"tvhgo","text":"<p>tvhgo provides a modern and secure alternative for the Tvheadend web interface and the api. It aims to give users an all-round access to Tvheadend from any platform.</p> <p> Getting started</p>"},{"location":"auth/","title":"Auth","text":""},{"location":"auth/#reverse-proxy-auth","title":"Reverse proxy auth","text":"<p>You configure tvhgo to let a HTTP reverse proxy handle the authentication.</p> <pre><code>auth:\n  reverse_proxy:\n    # Defaults to false, set to true to enable reverse proxy authentication.\n    enabled: true\n    # HTTP header containing the username.\n    user_header: X-MY-USER_HEADER\n    # HTTP header containing the email. (not required)\n    # If not available the username will be used.\n    email_header: X-MY-EMAIL_HEADER\n    # HTTP header containing the name. (not required)\n    # If not available the username will be used.\n    name_header: X-MY-NAME_HEADER\n    # Limit where the reverse proxy is allowed to come from to prevent\n    # spoofing the headers. If not set, all requests will be blocked.\n    allowed_proxies: [\"192.168.1.1\", \"192.168.2.0/24\"]\n    # If this is enabled, not existing users will automatically be registered.\n    allow_registration: true\n</code></pre> <p>See Reverse proxy auth for further information.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>tvhgo can be configured using environment variables or a config file.</p> <p>Note: Environment Variables will be overridden by the config file.</p>"},{"location":"configuration/#config-via-file","title":"Config via File","text":"<p>The configuration file in in the YAML format and looks like this:</p> <pre><code>server:\n  host: 127.0.0.1\n  port: 8080\n\ntvheadend:\n  scheme: http\n  host: &lt;tvheadend_host&gt;\n  port: 9981\n  username: &lt;tvheadend_username&gt;\n  password: &lt;tvheadend_password&gt;\n\ndatabase:\n  path: ./tvhgo.db\n</code></pre> <p>tvhgo will search for a config files at the following paths with the following order:</p> <ul> <li><code>./config.yml</code></li> <li><code>./config.yaml</code></li> <li><code>/etc/tvhgo/config.yml</code></li> <li><code>/etc/tvhgo/config.yaml</code></li> </ul>"},{"location":"configuration/#config-via-environment-variable","title":"Config via Environment Variable","text":"<p>To configure tvhgo using environment variables, you can use the following syntax:</p> <pre><code>TVHGO_&lt;SECTION_NAMES...&gt;_&lt;CONFIG_PROPERTY&gt;=&lt;VALUE&gt;\n</code></pre> <p>For example, to configure the tvheadend password:</p> <pre><code>TVHGO_TVHEADEND_PASSWORD=&lt;YOUR_PASSWORD&gt;\n</code></pre>"},{"location":"configuration/#options","title":"Options","text":"<p>These configuration options are available.</p>"},{"location":"configuration/#server-config-server","title":"Server config (server)","text":"Parameter Type Required Default Description host string false Bind host of the http server. port int false 8080 Bind port of the http server. Ports below <code>1024</code> may require root rights. <p>Example</p> <pre><code>server:\n  host: 127.0.0.1\n  port: 1234\n</code></pre>"},{"location":"configuration/#log-config-log","title":"Log config (log)","text":"Parameter Type Required Default Description level enum (debug, info, warning, error, fatal) false info The log level. format enum(console, json) false console The log format. <p>Example</p> <pre><code>log:\n  level: debug\n  format: json\n</code></pre>"},{"location":"configuration/#tvheadend-config-tvheadend","title":"Tvheadend config (tvheadend)","text":"Parameter Type Required Default Description scheme string false http Scheme of the tvheadend server url. host string true Host (hostname or ip) of the tvheadend server. port int false 9981 Port of the tvheadend server. username string false Username of the tvheadend server. password string false Password of the tvheadend server. It is recommended to configure it via an environment variable. <p>Example</p> <pre><code>tvheadend:\n  scheme: https\n  host: 10.0.0.2\n  port: 5555\n  username: my_user\n  password: supersecret\n</code></pre>"},{"location":"configuration/#database-config-database","title":"Database config (database)","text":"Parameter Type Required Default Description path string false ./tvhgo.db (for the docker image: /data/tvhgo.db) Path of the database file. <p>Example</p> <pre><code>database:\n  path: /path/to/database.db\n</code></pre>"},{"location":"configuration/#auth-config-auth","title":"Auth config (auth)","text":""},{"location":"configuration/#session-config-authsession","title":"Session config (auth.session)","text":"Parameter Type Required Default Description cookie_name string false tvhgo_session The name of the session cookie. cookie_secure bool false false Sets the <code>secure</code> attribute of the session cookie. maximum_inactive_lifetime time.Duration false 168h The maximum inactive lifetime of a session. This configures the maximum lifetime of the session after the last login. maximum_lifetime time.Duration false 720h The maximum lifetime of a session. token_rotation_interval time.Duration false 30m The rotation interval of the token. cleanup_interval time.Duration false 12h The interval of the scheduler to cleanup expired sessions. <p>Example</p> <pre><code>auth:\n  session:\n    cookie_name: foobar_session\n    cookie_secure: true\n    maximum_inactive_lifetime: 24h\n    maximum_lifetime: 168h\n    token_rotation_interval: 1h\n    cleanup_interval: 6h\n</code></pre>"},{"location":"configuration/#totp-config-authtotp","title":"TOTP config (auth.totp)","text":"Parameter Type Required Default Description issuer string false tvhgo The totp issuer. <p>Example</p> <pre><code>auth:\n  totp:\n    issuer: foobar\n</code></pre>"},{"location":"configuration/#reverse-proxy-auth-config-authreverse_proxy","title":"Reverse proxy auth config (auth.reverse_proxy)","text":"Parameter Type Required Default Description enabled bool false false Enable reverse proxy authentication. user_header string false Remote-User The header containing the username. email_header string false Remote-Email The header containing the email. name_header string false Remote-Name The header containing the name. allowed_proxies []string false [] List of allowed proxies. If not set, all requests will be blocked. allow_registration bool false false If this is enabled, not existing users will automatically be registered."},{"location":"configuration/#metrics-config-metrics","title":"Metrics config (metrics)","text":"Parameter Type Required Default Description enabled bool false false This enables the metrics endpoint exposing metrics in the prometheus format. path string false /metrics The http path where the metrics are exposed. host string false Bind host of the metrics http server. port int false 8081 The http port of the metrics server. token string false Bearer authentication token of the http metrics endpoint. <p>NOTE: The port cannot be the same port as the normal tvhgo http server.</p> <p>Example</p> <pre><code>metrics:\n  enabled: true\n  path: /prometheus\n  host: 127.0.0.1\n  port: 2345\n  token: supersecret\n</code></pre>"},{"location":"fail2ban/","title":"Fail2Ban","text":"<p>Fail2Ban will prevent attackers to brute force your tvhgo instance. This is important if your server is publicly available.</p>"},{"location":"fail2ban/#filter","title":"Filter","text":"<p>Create a new filter file at <code>/etc/fail2ban/filter.d/tvhgo.local</code>:</p> <pre><code>[Definition]\nfailregex =  .*login failed: invalid username or password.*ip=&lt;HOST&gt; username=.*\nignoreregex =\n</code></pre>"},{"location":"fail2ban/#jail","title":"Jail","text":"<p>Create a new jail file at <code>/etc/fail2ban/jail.d/tvhgo.local</code>:</p> <pre><code>[tvhgo]\nenabled = true\nfilter = tvhgo\nmaxretry = 3\nbantime = 14400\nfindtime = 14400\naction = iptables-allports[chain=\"INPUT\"]\n</code></pre> <p>Info for docker users</p> <p>For docker you have to use the FORWARD chain instead of the INPUT chain:</p> <pre><code>action = iptables-allports[chain=\"FORWARD\"]\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>This guide provides step-by-step instructions to install thvgo using docker.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before you start, make sure you have the following ready:</p> <ul> <li>Docker</li> </ul>"},{"location":"installation/#install-tvhgo","title":"Install tvhgo","text":"<p>You can use the following command to run tvhgo using docker.</p> <pre><code>$ docker run -d \\\n    --name tvhgo \\\n    -p 8080:8080 \\\n    -e 'TVHGO_TVHEADEND_HOST=&lt;TVHEADEND_HOST&gt;' \\\n    -v /path/to/store/data:/tvhgo \\\n    --restart unless-stopped \\\n    ghcr.io/davidborzek/tvhgo:latest\n</code></pre> <p>Replace <code>&lt;TVHEADEND_HOST&gt;</code> with the actual hostname or ip of your tvheadend server and adapt /path/to/store/data to a path of your choice to persist the data stored by thvgo.</p> <p>You can find more configuration options here.</p>"},{"location":"installation/#create-a-user","title":"Create a user","text":"<p>To complete the setup you need to create a user.</p> <pre><code>docker exec -it tvhgo tvhgo admin user add\n</code></pre> <p>Follow the interactive setup to create a new user.</p>"},{"location":"metrics/","title":"Metrics","text":"<p>tvhgo can optionally export metrics of the tvheadend server in the Prometheus format.</p> <p>See Metrics config to enable the metrics enpoint.</p>"},{"location":"metrics/#exported-metrics","title":"Exported metrics","text":"<p>The following metrics will be exported:</p> Name Description tvhgo_tvheadend_total_connections Number of connected client devices. tvhgo_tvheadend_connection Connected client device. tvhgo_tvheadend_total_subscriptions Number of active subscriptions. tvhgo_tvheadend_subscription_errors Total errors of an active subscription. tvhgo_tvheadend_subscription_in Incoming bytes of an active subscription. tvhgo_tvheadend_subscription_out Outgoing bytes of an active subscription. tvhgo_tvheadend_subscription_total_in Total incoming bytes of an active subscription. tvhgo_tvheadend_subscription_total_out Total outgoing bytes of an active subscription. tvhgo_tvheadend_total_inputs Number of input devices. tvhgo_tvheadend_input_subscriptions Total subscriptions of an input. tvhgo_tvheadend_input_weight Weight of an input. tvhgo_tvheadend_input_signal Signal of an input. tvhgo_tvheadend_input_signal_scale Signal scale of an input. tvhgo_tvheadend_input_ber Bit error rate of an input. tvhgo_tvheadend_input_snr Signal-to-noise ratio of an input. tvhgo_tvheadend_input_snr_scale Signal-to-noise ratio scale of an input. tvhgo_tvheadend_input_unc Uncorrected blocks of an input. tvhgo_tvheadend_input_bps Bandwidth (bit/second) of an input. tvhgo_tvheadend_input_te Transport errors of an input. tvhgo_tvheadend_input_cc Continuity errors of an input. tvhgo_tvheadend_input_ec_bit Bit error count of an input. tvhgo_tvheadend_input_tc_bit Total bit error count of an input. tvhgo_tvheadend_input_ec_block Block error count of an input. tvhgo_tvheadend_input_tc_block Total block error count of an input."},{"location":"metrics/#grafana-dashboard","title":"Grafana dashboard","text":"<p>A Grafana dashboard is available as JSON.</p> <p></p>"}]}